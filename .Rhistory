c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# t 16
d<- data.frame(t.16.mean)
x1 <- seq(min(t.16.mean), max(t.16.mean), length=1000)
y1 <- dnorm(x=x4, mean=m, sd=s/sqrt(16))
d1 <- ggplot(data = d, aes(c$t.16.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = '카이제곱 표본 크기별 분포 df= 5')
# t 2
a<- data.frame(t.2.mean)
x1 <- seq(min(t.2.mean), max(t.2.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(2))
a1 <- ggplot(data = a, aes(a$t.2.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
# t 4
b<- data.frame(t.4.mean)
x1 <- seq(min(t.4.mean), max(t.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
b1 <- ggplot(data = b, aes(b$t.4.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# t 8
c<- data.frame(t.8.mean)
x1 <- seq(min(t.8.mean), max(t.8.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(8))
c1 <- ggplot(data = c, aes(c$t.8.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# t 16
d<- data.frame(t.16.mean)
x1 <- seq(min(t.16.mean), max(t.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
d1 <- ggplot(data = d, aes(d$t.16.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = '카이제곱 표본 크기별 분포 df= 5')
n <- 1000
df1 <- 3; df2 <- 5
f.4.mean <- rep(NA, n)
f.16.mean <- rep(NA, n)
f.64.mean <- rep(NA, n)
f.256.mean <- rep(NA, n)
# 표본 크기별로 1000번의 표본추출로 표본평균을 구함
for(i in 1:n) {
f.4.mean[i] <- mean(rf(4, df1=df1, df2=df2))
f.16.mean[i] <- mean(rf(16, df1=df1, df2=df2))
f.64.mean[i] <- mean(rf(64, df1=df1, df2=df2))
f.256.mean[i] <- mean(rf(256, df1=df1, df2=df2))
}
library(ggplot2)
install.packages('gridExtra')
library(gridExtra)
# Chi Square 분포
n <- 1000
df <- 5
ch.4.mean <- rep(NA, n)
ch.16.mean <- rep(NA, n)
ch.64.mean <- rep(NA, n)
ch.256.mean <- rep(NA, n)
for(i in 1:n) {
ch.4.mean[i] <- mean(rchisq(4, df=df))
ch.16.mean[i] <- mean(rchisq(16, df=df))
ch.64.mean[i] <- mean(rchisq(64, df=df))
ch.256.mean[i] <- mean(rchisq(256, df=df))
}
m <- df
s <- sqrt(2 * df)
# chi 4
a<- data.frame(ch.4.mean)
x1 <- seq(min(ch.4.mean), max(ch.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
a1 <- ggplot(data = a, aes(a$ch.4.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
# chi 16
b<- data.frame(ch.16.mean)
x1 <- seq(min(ch.16.mean), max(ch.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
b1 <- ggplot(data = b, aes(b$ch.16.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# chi 64
c<- data.frame(ch.64.mean)
x1 <- seq(min(ch.64.mean), max(ch.64.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd =s / sqrt(64))
c1 <- ggplot(data = c, aes(c$ch.64.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# chi 256
d<- data.frame(ch.256.mean)
x1 <- seq(min(ch.256.mean), max(ch.256.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd=s/sqrt(256))
d1 <- ggplot(data = d, aes(d$ch.256.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = '카이제곱 표본 크기별 분포 df= 5')
# T 분포
n <- 1000
df <- 5
t.2.mean <- rep(NA, n)
t.4.mean <- rep(NA, n)
t.8.mean <- rep(NA, n)
t.16.mean <- rep(NA, n)
# 표본 크기별로 1000번의 표본추출로 표본평균을 구함
for(i in 1:n) {
t.2.mean[i] <- mean(rt(2, df=df))
t.4.mean[i] <- mean(rt(4, df=df))
t.8.mean[i] <- mean(rt(8, df=df))
t.16.mean[i] <- mean(rt(16, df=df))
}
# t(df=3)의 평균과 표준편차
m <- 0
s <- sqrt(df / (df - 2))
# t 2
a<- data.frame(t.2.mean)
x1 <- seq(min(t.2.mean), max(t.2.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(2))
a1 <- ggplot(data = a, aes(a$t.2.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
# t 4
b<- data.frame(t.4.mean)
x1 <- seq(min(t.4.mean), max(t.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
b1 <- ggplot(data = b, aes(b$t.4.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# t 8
c<- data.frame(t.8.mean)
x1 <- seq(min(t.8.mean), max(t.8.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(8))
c1 <- ggplot(data = c, aes(c$t.8.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# t 16
d<- data.frame(t.16.mean)
x1 <- seq(min(t.16.mean), max(t.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
d1 <- ggplot(data = d, aes(d$t.16.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = 'T븐포 표본 크기별 분포 df= 5')
install.packages("gridExtra")
n <- 1000
df1 <- 3; df2 <- 5
f.4.mean <- rep(NA, n)
f.16.mean <- rep(NA, n)
f.64.mean <- rep(NA, n)
f.256.mean <- rep(NA, n)
# 표본 크기별로 1000번의 표본추출로 표본평균을 구함
for(i in 1:n) {
f.4.mean[i] <- mean(rf(4, df1=df1, df2=df2))
f.16.mean[i] <- mean(rf(16, df1=df1, df2=df2))
f.64.mean[i] <- mean(rf(64, df1=df1, df2=df2))
f.256.mean[i] <- mean(rf(256, df1=df1, df2=df2))
}
# f(df1=3, df2=5)의 평균과 표준편차
m <- df2 / (df2 - 2)
s <- sqrt(2 * df2^2 * (df1+df2-2) /(df1 * (df2-2)^2 * (df2-4)))
par(mfrow=c(2,2), oma = c(0, 0, 2, 0))
hist(f.4.mean, prob=T, main="표본 크기 : 4",
xlim=c(0,10),
ylab="", xlab="", col="orange", border="red")
x1 <- seq(min(f.4.mean), max(f.4.mean), length=1000)
y1 <- dnorm(x=x1, mean=m, sd=s/sqrt(4))
lines(x1, y1, lty=2, lwd=2, col="blue")
hist(f.16.mean, prob=T, main="표본 크기 : 16",
xlim=c(0,6),
ylab="", xlab="", col="orange", border="red")
x2 <- seq(min(f.16.mean), max(f.16.mean), length=1000)
y2 <- dnorm(x=x2, mean=m, sd=s/sqrt(16))
lines(x2, y2, lty=2, lwd=2, col="blue")
hist(f.64.mean, prob=T, main="표본 크기 : 64",
xlim=c(0.4,4),
ylab="", xlab="", col="orange", border="red")
x3 <- seq(min(f.64.mean), max(f.64.mean), length=1000)
y3 <- dnorm(x=x3, mean=m, sd=s/sqrt(64))
lines(x3, y3, lty=2, lwd=2, col="blue")
hist(f.256.mean, prob=T, main="표본 크기 : 256",
xlim=c(0.8,3),
ylab="", xlab="", col="orange", border="red")
x4 <- seq(min(f.256.mean), max(f.256.mean), length=1000)
y4 <- dnorm(x=x4, mean=m, sd=s/sqrt(256))
lines(x4, y4, lty=2, lwd=2, col="blue")
a<- data.frame(t.2.mean)
x1 <- seq(min(t.2.mean), max(t.2.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(2))
a1 <- ggplot(data = a, aes(a$t.2.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
# t 4
b<- data.frame(t.4.mean)
x1 <- seq(min(t.4.mean), max(t.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
b1 <- ggplot(data = b, aes(b$t.4.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# t 8
c<- data.frame(t.8.mean)
x1 <- seq(min(t.8.mean), max(t.8.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(8))
c1 <- ggplot(data = c, aes(c$t.8.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# t 16
d<- data.frame(t.16.mean)
x1 <- seq(min(t.16.mean), max(t.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
d1 <- ggplot(data = d, aes(d$t.16.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = 'T븐포 표본 크기별 분포 df= 5')
n <- 1000
df <- 5
t.2.mean <- rep(NA, n)
t.4.mean <- rep(NA, n)
t.8.mean <- rep(NA, n)
t.16.mean <- rep(NA, n)
# 표본 크기별로 1000번의 표본추출로 표본평균을 구함
for(i in 1:n) {
t.2.mean[i] <- mean(rt(2, df=df))
t.4.mean[i] <- mean(rt(4, df=df))
t.8.mean[i] <- mean(rt(8, df=df))
t.16.mean[i] <- mean(rt(16, df=df))
}
# t(df=3)의 평균과 표준편차
m <- 0
s <- sqrt(df / (df - 2))
# t 2
a<- data.frame(t.2.mean)
x1 <- seq(min(t.2.mean), max(t.2.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(2))
a1 <- ggplot(data = a, aes(a$t.2.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
# t 4
b<- data.frame(t.4.mean)
x1 <- seq(min(t.4.mean), max(t.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
b1 <- ggplot(data = b, aes(b$t.4.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# t 8
c<- data.frame(t.8.mean)
x1 <- seq(min(t.8.mean), max(t.8.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(8))
c1 <- ggplot(data = c, aes(c$t.8.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# t 16
d<- data.frame(t.16.mean)
x1 <- seq(min(t.16.mean), max(t.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
d1 <- ggplot(data = d, aes(d$t.16.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = 'T븐포 표본 크기별 분포 df= 5')
n <- 1000
df <- 5
t.2.mean <- rep(NA, n)
t.4.mean <- rep(NA, n)
t.8.mean <- rep(NA, n)
t.16.mean <- rep(NA, n)
# 표본 크기별로 1000번의 표본추출로 표본평균을 구함
for(i in 1:n) {
t.2.mean[i] <- mean(rt(2, df=df))
t.4.mean[i] <- mean(rt(4, df=df))
t.8.mean[i] <- mean(rt(8, df=df))
t.16.mean[i] <- mean(rt(16, df=df))
}
# t(df=3)의 평균과 표준편차
m <- 0
s <- sqrt(df / (df - 2))
# t 2
a<- data.frame(t.2.mean)
x1 <- seq(min(t.2.mean), max(t.2.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(2))
a1 <- ggplot(data = a, aes(a$t.2.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
# t 4
b<- data.frame(t.4.mean)
x1 <- seq(min(t.4.mean), max(t.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
b1 <- ggplot(data = b, aes(b$t.4.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# t 8
c<- data.frame(t.8.mean)
x1 <- seq(min(t.8.mean), max(t.8.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(8))
c1 <- ggplot(data = c, aes(c$t.8.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# t 16
d<- data.frame(t.16.mean)
x1 <- seq(min(t.16.mean), max(t.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
d1 <- ggplot(data = d, aes(d$t.16.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = 'T븐포 표본 크기별 분포 df= 5')
n <- 1000
df <- 5
t.2.mean <- rep(NA, n)
t.4.mean <- rep(NA, n)
t.8.mean <- rep(NA, n)
t.16.mean <- rep(NA, n)
for(i in 1:n) {
t.2.mean[i] <- mean(rt(2, df=df))
t.4.mean[i] <- mean(rt(4, df=df))
t.8.mean[i] <- mean(rt(8, df=df))
t.16.mean[i] <- mean(rt(16, df=df))
}
m <- 0
s <- sqrt(df / (df - 2))
# t 2
a<- data.frame(t.2.mean)
x1 <- seq(min(t.2.mean), max(t.2.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(2))
a1 <- ggplot(data = a, aes(a$t.2.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
b<- data.frame(t.4.mean)
x1 <- seq(min(t.4.mean), max(t.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
b1 <- ggplot(data = b, aes(b$t.4.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# t 8
c<- data.frame(t.8.mean)
x1 <- seq(min(t.8.mean), max(t.8.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(8))
c1 <- ggplot(data = c, aes(c$t.8.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
d<- data.frame(t.16.mean)
x1 <- seq(min(t.16.mean), max(t.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
d1 <- ggplot(data = d, aes(d$t.16.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = 'T븐포 표본 크기별 분포 df= 5')
# Chi Square 분포
n <- 1000
df <- 5
ch.4.mean <- rep(NA, n)
ch.16.mean <- rep(NA, n)
ch.64.mean <- rep(NA, n)
ch.256.mean <- rep(NA, n)
for(i in 1:n) {
ch.4.mean[i] <- mean(rchisq(4, df=df))
ch.16.mean[i] <- mean(rchisq(16, df=df))
ch.64.mean[i] <- mean(rchisq(64, df=df))
ch.256.mean[i] <- mean(rchisq(256, df=df))
}
m <- df
s <- sqrt(2 * df)
# chi 4
a<- data.frame(ch.4.mean)
x1 <- seq(min(ch.4.mean), max(ch.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
a1 <- ggplot(data = a, aes(a$ch.4.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
# chi 16
b<- data.frame(ch.16.mean)
x1 <- seq(min(ch.16.mean), max(ch.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
b1 <- ggplot(data = b, aes(b$ch.16.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# chi 64
c<- data.frame(ch.64.mean)
x1 <- seq(min(ch.64.mean), max(ch.64.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd =s / sqrt(64))
c1 <- ggplot(data = c, aes(c$ch.64.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# chi 256
d<- data.frame(ch.256.mean)
x1 <- seq(min(ch.256.mean), max(ch.256.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd=s/sqrt(256))
d1 <- ggplot(data = d, aes(d$ch.256.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = '카이제곱 표본 크기별 분포 df= 5')
# Chi Square 분포
n <- 1000
df <- 5
ch.4.mean <- rep(NA, n)
ch.16.mean <- rep(NA, n)
ch.64.mean <- rep(NA, n)
ch.256.mean <- rep(NA, n)
for(i in 1:n) {
ch.4.mean[i] <- mean(rchisq(4, df=df))
ch.16.mean[i] <- mean(rchisq(16, df=df))
ch.64.mean[i] <- mean(rchisq(64, df=df))
ch.256.mean[i] <- mean(rchisq(256, df=df))
}
m <- df
s <- sqrt(2 * df)
# chi 4
a<- data.frame(ch.4.mean)
x1 <- seq(min(ch.4.mean), max(ch.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
a1 <- ggplot(data = a, aes(a$ch.4.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
# chi 16
b<- data.frame(ch.16.mean)
x1 <- seq(min(ch.16.mean), max(ch.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
b1 <- ggplot(data = b, aes(b$ch.16.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# chi 64
c<- data.frame(ch.64.mean)
x1 <- seq(min(ch.64.mean), max(ch.64.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd =s / sqrt(64))
c1 <- ggplot(data = c, aes(c$ch.64.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# chi 256
d<- data.frame(ch.256.mean)
x1 <- seq(min(ch.256.mean), max(ch.256.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd=s/sqrt(256))
d1 <- ggplot(data = d, aes(d$ch.256.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = '카이제곱 표본 크기별 분포 df= 5')
# chi 256
d<- data.frame(ch.256.mean)
x1 <- seq(min(ch.256.mean), max(ch.256.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd=s/sqrt(256))
d1 <- ggplot(data = d, aes(d$ch.256.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = '카이제곱 표본 크기별 분포 df= 5')
n <- 1000
df1 <- 3; df2 <- 5
f.4.mean <- rep(NA, n)
f.16.mean <- rep(NA, n)
f.64.mean <- rep(NA, n)
f.256.mean <- rep(NA, n)
# 표본 크기별로 1000번의 표본추출로 표본평균을 구함
for(i in 1:n) {
f.4.mean[i] <- mean(rf(4, df1=df1, df2=df2))
f.16.mean[i] <- mean(rf(16, df1=df1, df2=df2))
f.64.mean[i] <- mean(rf(64, df1=df1, df2=df2))
f.256.mean[i] <- mean(rf(256, df1=df1, df2=df2))
}
# f(df1=3, df2=5)의 평균과 표준편차
m <- df2 / (df2 - 2)
s <- sqrt(2 * df2^2 * (df1+df2-2) /(df1 * (df2-2)^2 * (df2-4)))
a<- data.frame(f.4.mean)
x1 <- seq(min(f.4.mean), max(f.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
a1 <- ggplot(data = a, aes(f.4.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
a1
a2
a<- data.frame(f.4.mean)
x1 <- seq(min(f.4.mean), max(f.4.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(4))
a1 <- ggplot(data = a, aes(f.4.mean)) + geom_histogram()
a2 <- ggplot(data = a, aes(x1, y1)) + geom_point()
# f 16
b<- data.frame(f.16.mean)
x1 <- seq(min(f.16.mean), max(f.16.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
b1 <- ggplot(data = b, aes(b$f.16.mean)) + geom_histogram()
b2 <- ggplot(data = b, aes(x1, y1)) + geom_point()
# t 64
c<- data.frame(f.64.mean)
x1 <- seq(min(f.64.mean), max(f.64.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(64))
c1 <- ggplot(data = c, aes(c$f.64.mean)) + geom_histogram()
c2 <- ggplot(data = c, aes(x1, y1)) + geom_point()
# t 256
d<- data.frame(f.256.mean)
x1 <- seq(min(f.256.mean), max(f.256.mean), length=1000)
y1 <- dnorm(x = x1, mean = m, sd = s / sqrt(16))
d1 <- ggplot(data = d, aes(d$f.256.mean)) + geom_histogram()
d2 <- ggplot(data = d, aes(x1, y1)) + geom_point()
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = 'F 븐포 표본 크기별 분포 df= 5')
grid.arrange(a1,a2,b1,b2,c1,c2,d1,d2, ncol = 4, top = 'F 븐포 표본 크기별 분포 df= (3, 5)')
전국_사망교통사고정보_2018_.csvdata <- read.csv('C:/Users/Q/Downloads/도로교통공단_전국_사망교통사고정보_2018_.csv')
View(전국_사망교통사고정보_2018_.csvdata)
data <- read.csv('C:/Users/Q/Downloads/도로교통공단_전국_사망교통사고정보_2018_.csv')
library(dplyr)
data2 <- data %>% filter(가해자_당사자종별 == '이륜차')
View(data2)
data2 <- data2 %>% group_by(사고유형_대분류, 사고유형_중분류, 사고유형, 법규위반) %>%
summarise(count = n())
View(data2)
data3 <- data %>% filter(가해자_당사자종별 == '이륜차')
data3 <- data3 %>% group_by(사고유형_대분류) %>% summarise(count = n())
View(data3)
library(ggplot2)
qplot(data3, geom = 'bar')
ggplot(data = data3, aes(x = data3$사고유형_대분류, y = data3$count)) + geom_bar(stat = 'identity')
ggplot(data = data3, aes(x = data3$사고유형_대분류, y = data3$count, fill = data3$사고유형_대분류)) + geom_bar(stat = 'identity')
ggplot(data = data3, aes(x = reorder(data3$사고유형_대분류, -data3$count), y = data3$count, fill = data3$사고유형_대분류)) + geom_bar(stat = 'identity')
View(data2)
View(data3)
View(data2)
data4 <- data %>% count(법규위반)
View(data4)
View(data2)
View(data2)
ll <- 4/5 - 1.96(sqrt((4/5) * (1/5)) / 100)
ll <- 4/5 - 1.96 * (sqrt((4/5) * (1/5)) / 100)
ul <- 4/5 + 1.96 * (sqrt((4/5) * (1/5)) / 100)
ll <- 0.8 - 1.96 * (sqrt((0.8) * (0.2)) / 100)
ul <- 0.8 + 1.96 * (sqrt((0.8) * (0.2)) / 100)
printf('asdf %f', ll)
sprintf('asdf %f', ll)
sprintf('%f <= p <= %f', ll, ul)
# 1번문제
# 학생의 비율 p에 대한 신뢰도 95% 신뢰 구간
print(0.5 - 1.96 * (sqrt(0.5 * 0.5) / n) <= p <= 0.5 + 1.96 * (sqrt(0.5 * 0.5) / n))
# 1번문제
# 학생의 비율 p에 대한 신뢰도 95% 신뢰 구간
print('0.5 - 1.96 * (sqrt(0.5 * 0.5) / n) <= p <= 0.5 + 1.96 * (sqrt(0.5 * 0.5) / n)')
ll <- 430/1000 - 1.64 * (sqrt((430/1000) * (570/1000)) / 1000)
ul <- 430/1000 + 1.64 * (sqrt((430/1000) * (570/1000)) / 1000)
sprintf('%f <= p <= %f', ll, ul)
# 4번문제
# 샘플이 모집단과 같은가?
sampleA <- c(980, 1008, 968, 1032, 1012, 996, 1021, 1002, 996, 1017)
t.test(sampleA, mu = 1000)
sampleB <- c(58, 49, 39, 99, 32, 88, 62, 30, 55, 65, 44, 55, 57, 53, 88, 42, 39)
t.test(sampleB, mu = 55)
t.test(sampleB, mu = 55, alternative = 'grater')
t.test(sampleB, mu = 55, alternative = 'greater')
# 6번문제
# 알코올 섭취량이 달라졌는가?
smapleC <- c(15.50, 11.21, 12.67, 8.87, 12.15, 9.88, 2.06, 14.50, 0, 4.97)
t.test(sampleC, mu = 8.1)
# 6번문제
# 알코올 섭취량이 달라졌는가?
smapleC <- c(15.50, 11.21, 12.67, 8.87, 12.15, 9.88, 2.06, 14.50, 0, 4.97)
t.test(sampleC, mu = 8.1)
# 6번문제
# 알코올 섭취량이 달라졌는가?
sampleC <- c(15.50, 11.21, 12.67, 8.87, 12.15, 9.88, 2.06, 14.50, 0, 4.97)
t.test(sampleC, mu = 8.1)
