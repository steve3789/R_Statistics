}
write.table(all_reviews, "C:\\Temp\\movie_review.txt")
all_reviews <- NULL
url_base <- "http://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&onlyActualPointYn=N&order=newest&page="
for (i in 1:2) {
temp <- NULL
url <- paste(url_base, i, sep='')
txt <- readLines(url, encoding="UTF-8")
points <- txt[which(str_detect(txt, "class=\"star_score\""))+2]
points <- gsub("<.+?>|\t","", points)
points <- points[c(2:11)]  #한 리뷰 페이지당 데이터가 11건이 나옴 (첫번째의 불필요한행 존재. 때문에 2번째 행부터 11번째 행의 값만 가져옴)
reviews <- txt[which(str_detect(txt, "class=\"score_reple\""))+1]
reviews <- gsub("<.+?>|\t","", reviews)
temp <- cbind(points, reviews)
all_reviews <- rbind(all_reviews, temp)
}
View(reviews)
for (i in 1:10) {
temp <- NULL
url <- paste(url_base, i, sep='')
txt <- readLines(url, encoding="UTF-8")
points <- txt[which(str_detect(txt, "class=\"star_score\""))+2]
points <- gsub("<.+?>|\t","", points)
points <- points[c(2:11)]  #한 리뷰 페이지당 데이터가 11건이 나옴 (첫번째의 불필요한행 존재. 때문에 2번째 행부터 11번째 행의 값만 가져옴)
reviews <- txt[which(str_detect(txt, "class=\"score_reple\""))+1]
reviews <- gsub("<.+?>|\t","", reviews)
temp <- cbind(points, reviews)
all_reviews <- rbind(all_reviews, temp)
}
View(reviews)
for (i in 1:5) {
temp <- NULL
url <- paste(url_base, i, sep='')
txt <- readLines(url, encoding="UTF-8")
points <- txt[which(str_detect(txt, "class=\"star_score\""))+2]
points <- gsub("<.+?>|\t","", points)
points <- points[c(2:11)]  #한 리뷰 페이지당 데이터가 11건이 나옴 (첫번째의 불필요한행 존재. 때문에 2번째 행부터 11번째 행의 값만 가져옴)
reviews <- txt[which(str_detect(txt, "class=\"score_reple\""))+1]
reviews <- gsub("<.+?>|\t","", reviews)
temp <- cbind(points, reviews)
all_reviews <- rbind(all_reviews, temp)
}
View(all_reviews)
17443/10
library(rvest)
library(dplyr)
reviews <- c()
temp_reviews <- html %>%
html_nodes('.score_reple') %>%
html_text()
library(rvest)
library(dplyr)
for (i in 1:1745) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- html %>%
html_nodes('.score_reple') %>%
html_text()
reviews <- c(reviews, temp_reviews)
}
for (i in 1:10) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- html %>%
html_nodes('.score_reple') %>%
html_text()
reviews <- c(reviews, temp_reviews)
}
reviews <- c()
for (i in 1:10) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- html %>%
html_nodes('.score_reple') %>%
html_text()
reviews <- c(reviews, temp_reviews)
}
head(reviews)
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page="
reviews <- c()
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page="
reviews <- c()
for (i in 1:10) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- html %>%
html_nodes('.score_reple') %>%
html_text()
reviews <- c(reviews, temp_reviews)
}
head(reviews)
trim <- function(x) gsub('^\\s+|\\s+$',"",x)
for (i in 1:10) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
reviews <- c(reviews, temp_reviews)
}
head(reviews)
trim <- function(x) gsub('^\\s+|\\s+$',"",x)
temp_reviews <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
for (i in 1:10) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
reviews <- c(reviews, temp_reviews)
}
head(reviews)
url_base <- 'http://www.segye.com/newsList/0101030000000?page='
b <- c()
for (i in 1:10) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- trim(html %>%
html_nodes('.title_cr') %>%
html_text())
b <- c(b, temp_reviews)
}
for (i in 1:10) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- trim(html %>%
html_nodes('.area_box') %>%
html_nodes('.title_cr') %>%
html_text())
b <- c(b, temp_reviews)
}
for (i in 1:10) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- trim(html %>%
html_nodes('.r_txt') %>%
html_nodes('.title_cr') %>%
html_text())
b <- c(b, temp_reviews)
}
trim <- function(x) gsub('<(/)?([a-zA-Z0-9]*)(\\s[a-zA-Z0-9]*=[^>]*)?(\\s)*(/)?>',"",x)
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page="
reviews <- c()
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
reviews <- c(reviews, temp_reviews)
}
head(reviews)
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_reviews <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace, "[^[:alpha:]]","")
reviews <- c(reviews, temp_reviews)
}
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace, "[^[:alpha:]]","")
reviews <- c(reviews, temp_reviews)
}
head(reviews)
temp_replace<- str_replace_all(temp_replace, "[^[:alpha:]]","")
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace, "[^[:alpha:]]","")
reviews <- c(reviews, temp_reviews)
}
head(reviews)
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace, "['/\r\n|\r|\n/]","")
reviews <- c(reviews, temp_reviews)
}
head(reviews)
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace, "\\r","")
reviews <- c(reviews, temp_reviews)
}
head(reviews)
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace, "\r","")
reviews <- c(reviews, temp_reviews)
}
head(reviews)
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace, "[\r]","")
reviews <- c(reviews, temp_reviews)
}
head(reviews)
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace, "[\r]*","")
reviews <- c(reviews, temp_reviews)
}
head(reviews)
for (i in 1:3) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace,  "[\r\n\t]" , "")
reviews <- c(reviews, temp_reviews)
}
head(reviews)
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace<- str_replace_all(temp_replace,  "[\r\n\t]" , "")
reviews <- c(reviews, temp_reviews)
}
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace <- str_replace_all(temp_replace,  "[\r\n\t]" , "")
reviews <- c(reviews, temp_reviews)
}
head(reviews)
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace <- str_replace_all(temp_replace,  "[\r\n\t]" , "")
reviews <- c(reviews, temp_reviews)
}; head(reviews)
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace <- unlist(temp_replace)
temp_replace <- str_replace_all(temp_replace, "[^[:alpha:]]","")
reviews <- c(reviews, temp_reviews)
}; head(reviews)
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page="
reviews <- c()
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace <- unlist(temp_replace)
temp_replace <- str_replace_all(temp_replace, "[^[:alpha:]]","")
reviews <- c(reviews, temp_reviews)
}; head(reviews)
trim <- function(x) gsub('^\\s+|\\s+$',"",x)
trim <- function(x) gsub('^\\s+|\\s+$',"",x)
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page="
reviews <- c()
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace <- unlist(temp_replace)
temp_replace <- str_replace_all(temp_replace, "[^[:alpha:]]","")
reviews <- c(reviews, temp_reviews)
}; head(reviews)
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
class(temp_replace)
temp_replace <- unlist(temp_replace)
class(temp_replace)
temp_replace <- str_replace_all(temp_replace, "[^[:alpha:]]","")
reviews <- c(reviews, temp_reviews)
}; head(reviews)
class(temp_replace)
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- trim(html %>%
html_nodes('.score_reple') %>%
html_text())
temp_replace <- gsub('[~!@#$%^&*()_+=?]<>','',temp_replace)
reviews <- c(reviews, temp_reviews)
}; head(reviews)
all_reviews <- NULL
url_base <- "http://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&onlyActualPointYn=N&order=newest&page="
for (i in 1:2) {
temp <- NULL
url <- paste(url_base, i, sep='')
txt <- readLines(url, encoding="UTF-8")
points <- txt[which(str_detect(txt, "class=\"star_score\""))+2]
points <- gsub("<.+?>|\t","", points)
points <- points[c(2:11)]  #한 리뷰 페이지당 데이터가 11건이 나옴 (첫번째의 불필요한행 존재. 때문에 2번째 행부터 11번째 행의 값만 가져옴)
reviews <- txt[which(str_detect(txt, "class=\"score_reple\""))+1]
reviews <- gsub("<.+?>|\t","", reviews)
temp <- cbind(points, reviews)
all_reviews <- rbind(all_reviews, temp)
}
all_reviews
for (i in 1:2) {
temp <- NULL
url <- paste(url_base, i, sep='')
txt <- readLines(url, encoding="UTF-8")
points <- txt[which(str_detect(txt, "class=\"star_score\""))]
points <- gsub("<.+?>|\t","", points)
points <- points[c(2:11)]  #한 리뷰 페이지당 데이터가 11건이 나옴 (첫번째의 불필요한행 존재. 때문에 2번째 행부터 11번째 행의 값만 가져옴)
reviews <- txt[which(str_detect(txt, "class=\"score_reple\""))]
reviews <- gsub("<.+?>|\t","", reviews)
temp <- cbind(points, reviews)
all_reviews <- rbind(all_reviews, temp)
}
all_reviews
for (i in 1:2) {
temp <- NULL
url <- paste(url_base, i, sep='')
txt <- readLines(url, encoding="UTF-8")
points <- txt[which(str_detect(txt, "class=\"star_score\""))+2]
points <- gsub("<.+?>|\t","", points)
points <- points[c(2:11)]  #한 리뷰 페이지당 데이터가 11건이 나옴 (첫번째의 불필요한행 존재. 때문에 2번째 행부터 11번째 행의 값만 가져옴)
reviews <- txt[which(str_detect(txt, "class=\"score_reple\""))+1]
reviews <- gsub("<.+?>|\t","", reviews)
temp <- cbind(points, reviews)
all_reviews <- rbind(all_reviews, temp)
}
all_reviews
trim <- function(x) gsub('^\\s+|\\s+$',"",x)
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page="
reviews <- c()
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- html %>%
html_nodes('.score_reple') %>%
html_text()
temp_replace <- gsub("<.+?>|\t","", temp_replace)
reviews <- c(reviews, temp_reviews)
}; head(reviews)
for (i in 1:2) {
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- html %>% html_nodes('.score_reple') %>% html_text()
temp_replace <- gsub("<.+?>|\t","", temp_replace)
reviews <- c(reviews, temp_reviews)
}; head(reviews)
all_reviews
all_reviews
View(all_reviews)
for (i in 1:2) {
temp <- NULL
url <- paste(url_base, i, sep='')
txt <- readLines(url, encoding="UTF-8")
points <- txt[which(str_detect(txt, "class=\"star_score\""))+2]
points <- gsub("<.+?>|\t","", points)
points <- points[c(2:11)]  #한 리뷰 페이지당 데이터가 11건이 나옴 (첫번째의 불필요한행 존재. 때문에 2번째 행부터 11번째 행의 값만 가져옴)
reviews <- txt[which(str_detect(txt, "class=\"score_reple\""))+1]
reviews <- gsub("<.+?>|\t","", reviews)
temp <- cbind(points, reviews)
all_reviews <- rbind(all_reviews, temp)
}
all_reviews
all_reviews
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page=1"
reviews <- c()
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- html %>% html_nodes('.score_reple') %>% html_text()
reviews <- c(reviews, temp_reviews)
head(reviews)
View(reviews)
all_reviews[1]
all_reviews[2]
all_reviews[10]
all_reviews[100]
all_reviews[1000]
all_reviews[100]
all_reviews[101]
all_reviews[99]
reviews[1]
r <- unlist(reviews)
r
r[1]
trim(r)
rr<-trim(r)
rr
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=17421&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page=1"
reviews <- c()
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- html %>%
html_nodes('.score_reple') %>%
html_nodes('p') %>%
html_text()
reviews <- c(reviews, temp_reviews)
reviews
class(reviews)
reviews_r <- gsub('우리','',reviews)
reviews_r
reviews <- c(reviews, temp_reviews)
reviews_r <- gsub('\\t','',reviews)
reviews_r
reviews_r <- gsub('\\n','',reviews)
reviews_r
reviews_r <- gsub('[\\t\\r\\n]','',reviews)
reviews_r
reviews_r <- gsub('[\\t]','',reviews)
reviews_r
reviews_r <- gsub('\\t','',reviews)
reviews_r
reviews_r <- gsub('\\t*\\n*','',reviews)
reviews_r
reviews_r <- gsub('\\t*\\n*\\r*','',reviews)
reviews_r
reviews_r[1]
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=163788&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page=2"
reviews <- c()
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- html %>%
html_nodes('.score_reple') %>%
html_nodes('p') %>%
html_text()
reviews <- c(reviews, temp_reviews)
reviews_r <- gsub('\\t*\\n*\\r*','',reviews)
reviews_r[1]
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=163788&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page=2"
reviews <- c()
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- html %>%
html_nodes('.score_reple') %>%
html_nodes('p') %>%
html_text()
reviews <- c(reviews, temp_reviews)
reviews_r <- gsub('\\t*\\n*\\r*','',reviews)
reviews_r[1]
reviews_r
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=163788&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page=2"
reviews <- c()
url <- paste0(url_base,i)
html <- read_html(url)
temp_replace <- html %>%
html_nodes('.score_reple') %>%
html_nodes('p') %>%
html_text()
reviews <- c(reviews, temp_reviews)
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=163788&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page=2"
reviews <- c()
html <- read_html(url_base)
temp_replace <- html %>%
html_nodes('.score_reple') %>%
html_nodes('p') %>%
html_text()
reviews <- c(reviews, temp_reviews)
reviews_r <- gsub('\\t*\\n*\\r*','',reviews)
reviews_r
url_base <- "https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=163788&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page=1"
reviews <- c()
url <- paste0(url_base,1)
html <- read_html(url_base)
temp_replace <- html %>%
html_nodes('.score_reple') %>%
html_nodes('p') %>%
html_text()
reviews <- c(reviews, temp_reviews)
reviews_r <- gsub('\\t*\\n*\\r*','',reviews)
reviews_r
